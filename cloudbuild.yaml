steps:
  - id: 'Build Docker Image'
    # Description: Build the Docker image from the source code
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -t $_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA .
  - id: 'Push Docker Image'
    # Description: Push the Docker image to the Artifact Registry
    name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker push $_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA

#  - id: 'Run Sonar Scanner'
#    # Description: Analyze the code for quality and security issues using SonarScanner
#    name: gcr.io/$PROJECT_ID/sonar-scanner:latest
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        sonar-scanner \
#          -Dsonar.host.url=https://sonarcloud.io \
#          -Dsonar.login=$_SONAR_TOKEN \
#          -Dsonar.projectKey=career-crew_career-board-service \
#          -Dsonar.organization=career-crew \
#          -Dsonar.sources=src/main/java/ \
#          -Dsonar.tests=src/test/java

  - id: 'Deploy to Cloud Run'
    # Description: Deploy the Docker image to Google Cloud Run
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy $_SERVICE_NAME \
          --image $_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA \
          --region $_DEPLOY_REGION \
          --platform $_PLATFORM

timeout: 1200s
images:
  - '$_AR_HOSTNAME/$PROJECT_ID/$_AR_REPO/$_SERVICE_NAME:$COMMIT_SHA'
options:
  logging: CLOUD_LOGGING_ONLY